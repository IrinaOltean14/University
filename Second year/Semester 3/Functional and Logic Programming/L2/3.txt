; 3. Return the number of levels of a tree of type (1).

(defun parcurg_st (l n m)
    (cond
        ((null l) nil)
        ((= n (+ m 1)) nil)
        (t (cons (car l) (cons (cadr l) (parcurg_st (cddr l) (+ n 1) (+ m (cadr l))))))
    )
)

(defun stang (l)
    (parcurg_st (cddr l) 0 0)
)

(defun parcurg_dr (l n m)
    (cond
        ((null l) nil)
        ((= n (+ m 1)) l)
        (t (parcurg_dr (cddr l) (+ n 1) (+ m (cadr l))))
    )
)

(defun drept (l)
    (parcurg_dr (cddr l) 0 0)
)


; levels(l1...ln) = 0, if n = 0
; = 1 + max(levels(stang l), levels(drept l)), otherwise

(defun my_max (a b)
    (cond 
        ((< a b) b)
        (t a)
    )
)

(defun levels (l)
    ;(print l)
    (cond
        ((null l) 0)
        (t (+ 1 (my_max (levels (stang l)) (levels (drept l)))))
    )
)


(print (levels '(A 1 B 0)))




