; 10.  Return the level of a node X in a tree of type (2). The level of the root element is 0

; check(l1..ln, p) = t, if l1 = p
; = nil, if n = 0
; = check(l2..ln, p) if l1 atom
; = or(check(l1), check(l2...ln)), if l1 list

(defun check (l p)
    (cond
        ((null l) nil)
        ((eql (car l) p) t)
        ((atom (car l)) (check (cdr l) p))
        (t (or (check (cdr l) p) (check (car l) p)))
    )
)


; level(l1...ln, p) = 0, if l1 = p
; = 1 + level(l2, p), if check(l2, p)
; = 1 + level(l3, p), if check(l3, p)
; = nil, otherwise


(defun level (l p)
    ;(print l)
    (cond
        ((eql (car l) p) 0)
        ((check (cadr l) p) (+ 1 (level (cadr l) p)))
        ((check (caddr l) p) (+ 1 (level (caddr l) p)))
        (t nil)
     )
)


(print (level '(A (B) (C (D) (E))) 'D))